(module): MobileNetV3(
    (features): Sequential(
      (0): Sequential(
        (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): Hswish()
      )
      (1): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=16, bias=False)
          (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=16, out_features=4, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=4, out_features=16, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): ReLU(inplace=True)
          (7): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(16, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(72, 72, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=72, bias=False)
          (4): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Identity()
          (6): ReLU(inplace=True)
          (7): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(24, 88, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv2d(88, 88, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=88, bias=False)
          (4): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Identity()
          (6): ReLU(inplace=True)
          (7): Conv2d(88, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(96, 96, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=96, bias=False)
          (4): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=96, out_features=24, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=24, out_features=96, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(96, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
          (4): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=240, out_features=60, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=60, out_features=240, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (6): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)
          (4): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=240, out_features=60, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=60, out_features=240, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (7): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
          (4): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=120, out_features=30, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=30, out_features=120, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (8): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(48, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144, bias=False)
          (4): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=144, out_features=36, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=36, out_features=144, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (9): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(48, 288, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(288, 288, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=288, bias=False)
          (4): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=288, out_features=72, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=72, out_features=288, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(288, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (10): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=144, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=144, out_features=576, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (11): MobileBottleneck(
        (conv): Sequential(
          (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Hswish()
          (3): Conv2d(576, 576, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=576, bias=False)
          (4): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): SEModule(
            (avg_pool): AdaptiveAvgPool2d(output_size=1)
            (fc): Sequential(
              (0): Linear(in_features=576, out_features=144, bias=False)
              (1): ReLU(inplace=True)
              (2): Linear(in_features=144, out_features=576, bias=False)
              (3): Hsigmoid()
            )
          )
          (6): Hswish()
          (7): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (8): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (12): Sequential(
        (0): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): Hswish()
      )
      (13): AdaptiveAvgPool2d(output_size=1)
      (14): Conv2d(576, 1280, kernel_size=(1, 1), stride=(1, 1))
      (15): Hswish()
    )
    (classifier): Sequential(
      (0): Dropout(p=0.8, inplace=False)
      (1): Linear(in_features=1280, out_features=1000, bias=True)
    )
  )
)

